
	criticall -> existuje controla, severita má 4 stavy a nelze vybrat jiný (bude upozorněno)

	Změny v:
	generator -> config -> rules -> apinotifiactionrouter.json
		- změna
		- pipenv shell - V případě, že není nainstalováno -> pipenv install 
		- cd config.prometheus/generator
		- python run.py
		- Změní se v apinotifiactionrouter.rules.yml - vytvoří alerty
		- Kontrola pro každý Environment v config.prometheus/generator/rules/prd, stg, dev

		- push do branche

	priority - je pro Opsgenie

	runbook path = je jablotron.atlassian.net/wiki/space/alerts/pages/xxxxxxxxxxx/asadasdasd - xxxxxx = číslo
			- yaml zkompiluje


	virtualní environment pythonu -> pipenv
	pipenv install -> doinstaluje všechno co potřebuje z Pipfile
	Readme.md
	
	alertmanager -> připojený na promethea
	
	prometheus -> grafana = grafy 
	prometheus -> opsgenie = alerty	

	for = pokud trvá alert > x min tak je firing
		jinak pending
	Když for není tak je statický = skáče při každém výskytu
		= null



	cd desktop/configure-prometheus -> pipenv shell -> pipenv install (dependencies z pipfile)
	provést změnu v .jsonu	
	python3 run.py -> provede změny všude v projektu

	check v rules pro každý env jestli sedí limity a změny
	
	(git checkout -b feature/OPS-2588 -> Vytvoří novou branch)
	git add .
	git commit -m "changed NodeExporter-NodeAvailableDisk-InfraBackup"
	git push origin feature/OPS-XXXX

	kliknout na push odkaz -> merge request
	Vyplnit Asignee, reviewer
	Merge options odškrtnout obě

	Smazat svoji local větev a pullnout si znovu mastera
	
	Merge dává Andrej

	Pipelines - test dev prd stg
	Merge - až se dokončí zbytek tak pak bude deploy
	Lze commit, push zkrz VS


	git clone git@gitlab.jablotron.cloud:jablotron_ops/config.prometheus.git
	
	Před pushováním a vytvářením merge requestu je potřeba mít aktuální master branch
	git checkout master -> skočí do Masteru nebo do jiné větve (pokud neexistuje, vytvoří)
	git merge feature/OPS-2749 - spojí aktuální větev s feature/OPS-2749 (ve VS by mělo být aktuálně nastaveno, že si bude pullovat věci pravidelně sám)
	git pull origin master -> vezme lokální master větev a nahradí ji aktuální master větví z gitu
	
